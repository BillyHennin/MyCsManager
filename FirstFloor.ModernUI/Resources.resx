<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Cancel" xml:space="preserve">
    <value>cancel</value>
  </data>
  <data name="Close" xml:space="preserve">
    <value>close</value>
  </data>
  <data name="DefaultData" xml:space="preserve">
    <value>F1 M 51.4237,48.8848C 50.7931,49.2215 49.8882,49.5476 48.7089,49.8629C 47.5297,50.1782 46.2685,50.3472 44.9253,50.3698C 43.486,50.3769 42.1321,50.1485 40.8638,49.6844C 39.5955,49.2203 38.4982,48.4778 37.5719,47.4568C 36.7168,46.4954 36.0898,45.1626 35.6908,43.4585L 49.9986,43.4585L 49.9986,39.5398L 34.8927,39.5398C 34.8927,39.2394 34.8927,38.9079 34.8927,38.5453C 34.8832,37.8721 34.9022,37.2298 34.9497,36.6185L 49.9986,36.6185L 49.9986,32.6998L 35.8048,32.6998C 36.1848,31.1509 36.7928,29.8925 37.6289,28.9245C 38.5243,27.8536 39.5694,27.0623 40.7641,26.5506C 41.9588,26.0389 43.2318,25.7849 44.5833,25.7885C 45.854,25.8067 47.0463,25.9591 48.1603,26.2457C 49.2742,26.5323 50.21,26.8444 50.9677,27.182L 52.5638,20.7122C 51.5235,20.2469 50.2694,19.852 48.8016,19.5276C 47.3337,19.2032 45.7376,19.0339 44.0133,19.0198C 41.2942,19.0327 38.8275,19.5428 36.6132,20.5499C 34.3988,21.557 32.505,22.9836 30.9319,24.8297C 29.0913,26.9158 27.8084,29.5392 27.0833,32.6998L 23.2788,32.6998L 23.2788,36.6185L 26.4697,36.6185C 26.4511,37.2401 26.4326,37.8617 26.414,38.4832C 26.414,38.8665 26.414,39.2187 26.414,39.5398L 23.2788,39.5398L 23.2788,43.4585L 26.9717,43.4585C 27.5109,46.4794 28.5521,48.9483 30.0953,50.8652C 31.6842,52.9082 33.6699,54.4627 36.0523,55.5289C 38.4347,56.5951 41.0504,57.1317 43.8993,57.1385C 45.7448,57.1168 47.4406,56.8989 48.9868,56.4851C 50.533,56.0712 51.8014,55.592 52.7918,55.0474L 51.4237,48.8848 Z</value>
  </data>
  <data name="Maximize" xml:space="preserve">
    <value>maximize</value>
  </data>
  <data name="Minimize" xml:space="preserve">
    <value>minimize</value>
  </data>
  <data name="NavigationFailed" xml:space="preserve">
    <value>Navigation failed</value>
  </data>
  <data name="NavigationFailedFrameNotFound" xml:space="preserve">
    <value>Unable to navigate to {0}, could not find a ModernFrame target '{1}'</value>
  </data>
  <data name="NavigationFailedSourceNotSpecified" xml:space="preserve">
    <value>Unable to navigate to {0}, no source specified</value>
  </data>
  <data name="No" xml:space="preserve">
    <value>no</value>
  </data>
  <data name="Ok" xml:space="preserve">
    <value>ok</value>
  </data>
  <data name="Restore" xml:space="preserve">
    <value>restore</value>
  </data>
  <data name="UIThreadRequired" xml:space="preserve">
    <value>Operation requires the UI thread</value>
  </data>
  <data name="UnexpectedToken" xml:space="preserve">
    <value>Unexpected token</value>
  </data>
  <data name="UnknownTokenType" xml:space="preserve">
    <value>Unknown token type</value>
  </data>
  <data name="Yes" xml:space="preserve">
    <value>yes</value>
  </data>
</root>